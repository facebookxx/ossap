<?php

/**
 * @file
 * Statistics for OpenScholar Single Access Point (OSSAP).
 */

/**
 * Defines the settings variable name for the total child sites count block.
 */
define('OSSAP_SITES_BLOCK_SETTINGS', 'ossap_stats_sites_settings');

/**
 * Implements hook_menu().
 */
function ossap_stats_menu() {
  $items = array();

  $items['ossap/stats'] = array(
    'title' => t('OpenScholar SAP stats'),
    'page callback' => '_ossap_stats_page',
    'page arguments' => array(2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['ossap/stats.js'] = array(
    'title' => t('OpenScholar Stats'),
    'page callback' => '_ossap_stats_embed_js',
    'page arguments' => array(2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function ossap_stats_theme() {
  return array(
    'ossap_stats_embed_js' => array(
      'variables' => array('stats' => array() ),
      'template' => 'ossap-stats-embed-js',
    ),
  );
}

/**
 * Page callback; exposes all OSSAP stats in one JSON object.
 */
function _ossap_stats_page() {
  // Prepares a safe version of the child_domains variable to expose.
  $child_domains = variable_get('ossap_child_domains', array());
  foreach ($child_domains as $url => $info) {
    if (isset($info['restuser'])) {
      unset($child_domains[$url]['restuser']);
    }
  }

  // Prepares the data array to render to the page as JSON.
  $data = array(
    'success' => TRUE,
    'child_domains' => $child_domains,
    'aggregates' => variable_get('ossap_stats_aggregates', array()),
    'os_version' => _ossap_stats_get_os_version(),
  );

  // Adds GetSatisfaction statistics if any statistics exist.
  $getsatisfaction = variable_get('ossap_stats_getsatisfaction', NULL);
  if ($getsatisfaction !== NULL) {
    $data['getsatisfaction'] = $getsatisfaction;
  }

  drupal_json_output($data);
}

/**
 * Page callback; formats and displays the embed code to paste on any site.
 */
function _ossap_stats_embed_js($stat) {
  drupal_add_http_header('Content-Type', 'text/javascript; charset=utf-8');
  $aggregates = variable_get('ossap_stats_aggregates', array());
  $variables = array(
    'aggregates' => $aggregates,
    'os_version' => _ossap_stats_get_os_version(),
  );

  print theme('ossap_stats_embed_js', $variables);
  exit;
}

/**
 * Implements hook_cron_queue_info().
 */
function ossap_stats_cron_queue_info() {
  $queue = array();

  $queue['ossap_stats_queue'] = array(
    'worker callback' => 'ossap_stats_block_worker',
  );

  return $queue;
}

/**
 * Implements hook_cron().
 */
function ossap_stats_cron() {
  $queue = DrupalQueue::get('ossap_stats_queue');
  $queue->createQueue();
  $stats = array('sites', 'getsatisfaction');
  foreach ($stats as $stat) {
    $queue->createItem($stat);
  }
}

/**
 * Cron worker callback for OSSAP stats.
 */
function ossap_stats_block_worker($stat = '') {
  switch ($stat) {
    case 'sites':
      ossap_stats_sites_cron_worker();
      break;
    case 'getsatisfaction':
      ossap_stats_getsatisfaction_cron_worker();
      break;
  }
}

function ossap_stats_getsatisfaction_cron_worker() {
  $function = 'getsatisfaction_integration_stats';
  if (!function_exists($function)) {
    return;
  }

  $getsatisfaction_stats = $function();
  if (!empty($getsatisfaction_stats)) {
    variable_set('ossap_stats_getsatisfaction', $getsatisfaction_stats);
  }
}

/**
 * Cron queue worker for the ossap_stats_sites block.
 *
 * Invokes drupal_http_request on each child server to get total sites stats.
 */
function ossap_stats_sites_cron_worker() {
  $aggregates = array();

  $stat_keys = array_keys(_os_stats_queries());
  $unsummable = array('filesize');
  $servers = variable_get('ossap_child_domains', array());
  $domains = array_keys($servers);
  $options = array();
  foreach ($domains as $domain) {
    $url = "http://$domain/stats";
    $result = drupal_http_request($url, $options);
    if (isset($result->data)) {
      $data = drupal_json_decode($result->data);
	    foreach ($stat_keys as $stat) {
        if (in_array($stat, $unsummable)) {
          continue;
        }
		    if (isset($data[$stat]['value'])) {
		      if(!isset($aggregates[$stat])){
            $aggregates[$stat] = 0;
		      }
          $aggregates[$stat] += $data[$stat]['value'];
	      }
			}
    }
  }

  if (count($aggregates)) {
    variable_set('ossap_stats_aggregates', $aggregates);
  }
}

/**
 * Gets current OpenScholar release version string, like "3.10".
 */
function _ossap_stats_get_os_version() {
  // Parses the info file to get os_version.
  $path = drupal_get_path('profile', 'openscholar') . '/openscholar.info';
  $info = drupal_parse_info_file($path);

  // Removes the Drupal major version number prefix (i.e. "7.x-").
  $os_version = substr($info['os_version'], 4);

  return $os_version;
}
